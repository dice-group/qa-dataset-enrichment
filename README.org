* QA dataset enrichment

** Approach

For each question in the dataset, do the following:

*** Knowledge graph-based mutation

**** Example questions
#+begin_quote
Who developed Skype?

PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Skype dbo:developer ?uri. }
#+end_quote

*** Approach
1) Run named entity recognition (NER) on the question text.

2) For each recognized entity, replace its URI in the answer lookup query with a variable. Optionally, restrict that variable by entity [[http://www.w3.org/1999/02/22-rdf-syntax-ns#type][type]] information provided by NER or retrieved from the knowledge graph (KG).

3) Use that generalized query to retrieve more entities from a KG which can replace the original entity while still yielding non-empty results for the question.

4) Generate new questions by replacing  entity URI in the query with a new one and the recognized phrase in the question text with a new entity's label.

** Possible improvements
*** Support more complex questions and queries
*** Handle multilingual datasets

** Usage
*** Prepare datasets
**** Download datasets
#+begin_src sh :results silent
for dataset in $(ls datasets)
do
  wget -i datasets/"$dataset"/url -O datasets/"$dataset"/original
done
#+end_src

**** Preprocess datasets
#+begin_src sh :results silent
for dataset in $(ls datasets)
do
  jq -f datasets/"$dataset"/filter datasets/"$dataset"/original >datasets/"$dataset"/input
done
#+end_src

*** Build
#+begin_src sh :results silent
mvn package
#+end_src

*** Run
**** Query Entity Parser
Adds entity mentions to the question based on the SPARQL queries.

Arguments:
- ~--input~ the input dataset file
- ~--output~ the output dataset file

**** Question Enrichment
Arguments for the jar file:
- ~--input-file~ the input dataset file
- ~--output-file~ the generated output dataset file
- ~--sparql-endpoint~ URL for the SPARQL endpoint
  - https://query.wikidata.org/bigdata/namespace/wdq/sparql
  - https://dbpedia.org/sparql
- ~--report-file~ the report file
